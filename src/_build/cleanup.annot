"cleanup.ml" 6 57 61 "cleanup.ml" 6 57 73
type(
  Cnf.Literal.t -> Cnf.Literal.t
)
ident(
  def reverse_term "cleanup.ml" 15 561 561 "cleanup.ml" 1 0 -1
)
"cleanup.ml" 6 57 74 "cleanup.ml" 6 57 75
type(
  Cnf.Literal.t
)
ident(
  def v "cleanup.ml" 7 78 80 "cleanup.ml" 9 137 180
)
"cleanup.ml" 7 78 86 "cleanup.ml" 7 78 87
type(
  Cnf.Literal.t
)
ident(
  int_ref v "cleanup.ml" 6 57 74 "cleanup.ml" 6 57 75
)
"cleanup.ml" 8 93 114 "cleanup.ml" 8 93 115
type(
  string
)
ident(
  def s "cleanup.ml" 8 93 119 "cleanup.ml" 8 93 136
)
"cleanup.ml" 8 93 97 "cleanup.ml" 8 93 115
type(
  Cnf.Literal.t
)
"cleanup.ml" 8 93 135 "cleanup.ml" 8 93 136
type(
  string
)
ident(
  int_ref s "cleanup.ml" 8 93 114 "cleanup.ml" 8 93 115
)
"cleanup.ml" 8 93 119 "cleanup.ml" 8 93 136
type(
  Cnf.Literal.t
)
"cleanup.ml" 9 137 157 "cleanup.ml" 9 137 158
type(
  string
)
ident(
  def s "cleanup.ml" 9 137 162 "cleanup.ml" 9 137 180
)
"cleanup.ml" 9 137 141 "cleanup.ml" 9 137 158
type(
  Cnf.Literal.t
)
"cleanup.ml" 9 137 179 "cleanup.ml" 9 137 180
type(
  string
)
ident(
  int_ref s "cleanup.ml" 9 137 157 "cleanup.ml" 9 137 158
)
"cleanup.ml" 9 137 162 "cleanup.ml" 9 137 180
type(
  Cnf.Literal.t
)
"cleanup.ml" 7 78 80 "cleanup.ml" 9 137 180
type(
  Cnf.Literal.t
)
"cleanup.ml" 6 57 74 "cleanup.ml" 9 137 180
type(
  Cnf.Literal.t -> Cnf.Literal.t
)
"cleanup.ml" 15 561 565 "cleanup.ml" 15 561 590
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t ->
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list ->
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list *
  bool String.Map.t
)
ident(
  def fixed_literals_to_new_cnf "cleanup.ml" 27 1260 1260 "cleanup.ml" 1 0 -1
)
"cleanup.ml" 15 561 591 "cleanup.ml" 15 561 601
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t
)
ident(
  def fixed_lits "cleanup.ml" 15 561 602 "cleanup.ml" 25 1230 1258
)
"cleanup.ml" 15 561 602 "cleanup.ml" 15 561 609
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list
)
ident(
  def old_cnf "cleanup.ml" 16 612 614 "cleanup.ml" 25 1230 1258
)
"cleanup.ml" 16 612 618 "cleanup.ml" 16 612 628
type(
  bool String.Map.t
)
ident(
  def assignment "cleanup.ml" 19 783 785 "cleanup.ml" 25 1230 1258
)
"cleanup.ml" 16 612 631 "cleanup.ml" 16 612 654
type(
  (string * bool) list -> bool String.Map.t
)
ident(
  ext_ref Core.Std.String.Map.of_alist_exn
)
"cleanup.ml" 17 655 660 "cleanup.ml" 17 655 668
type(
  Cnf.Literal.t list ->
  f:(Cnf.Literal.t -> string * bool) -> (string * bool) list
)
ident(
  ext_ref Core.Std.List.map
)
"cleanup.ml" 17 655 670 "cleanup.ml" 17 655 682
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t -> Cnf.Literal.t list
)
ident(
  ext_ref Core.Std.Set.elements
)
"cleanup.ml" 17 655 683 "cleanup.ml" 17 655 693
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t
)
ident(
  int_ref fixed_lits "cleanup.ml" 15 561 591 "cleanup.ml" 15 561 601
)
"cleanup.ml" 17 655 670 "cleanup.ml" 17 655 693
call(
  stack
)
type(
  Cnf.Literal.t list
)
"cleanup.ml" 17 655 726 "cleanup.ml" 17 655 727
type(
  string
)
ident(
  def s "cleanup.ml" 17 655 732 "cleanup.ml" 17 655 740
)
"cleanup.ml" 17 655 710 "cleanup.ml" 17 655 727
type(
  Cnf.Literal.t
)
"cleanup.ml" 17 655 732 "cleanup.ml" 17 655 733
type(
  string
)
ident(
  int_ref s "cleanup.ml" 17 655 726 "cleanup.ml" 17 655 727
)
"cleanup.ml" 17 655 735 "cleanup.ml" 17 655 740
type(
  bool
)
"cleanup.ml" 17 655 732 "cleanup.ml" 17 655 740
type(
  string * bool
)
"cleanup.ml" 17 655 761 "cleanup.ml" 17 655 762
type(
  string
)
ident(
  def s "cleanup.ml" 17 655 767 "cleanup.ml" 17 655 774
)
"cleanup.ml" 17 655 744 "cleanup.ml" 17 655 762
type(
  Cnf.Literal.t
)
"cleanup.ml" 17 655 767 "cleanup.ml" 17 655 768
type(
  string
)
ident(
  int_ref s "cleanup.ml" 17 655 761 "cleanup.ml" 17 655 762
)
"cleanup.ml" 17 655 770 "cleanup.ml" 17 655 774
type(
  bool
)
"cleanup.ml" 17 655 767 "cleanup.ml" 17 655 774
type(
  string * bool
)
"cleanup.ml" 17 655 699 "cleanup.ml" 17 655 775
type(
  Cnf.Literal.t -> string * bool
)
"cleanup.ml" 17 655 660 "cleanup.ml" 17 655 776
call(
  stack
)
type(
  (string * bool) list
)
"cleanup.ml" 16 612 631 "cleanup.ml" 17 655 777
call(
  stack
)
type(
  bool String.Map.t
)
"cleanup.ml" 19 783 789 "cleanup.ml" 19 783 807
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t -> bool
)
ident(
  def clause_unsatisfied "cleanup.ml" 20 867 869 "cleanup.ml" 25 1230 1258
)
"cleanup.ml" 19 783 808 "cleanup.ml" 19 783 814
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t
)
ident(
  def clause "cleanup.ml" 19 783 818 "cleanup.ml" 19 783 862
)
"cleanup.ml" 19 783 818 "cleanup.ml" 19 783 828
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t -> int
)
ident(
  ext_ref Core.Std.Set.length
)
"cleanup.ml" 19 783 830 "cleanup.ml" 19 783 839
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t ->
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t ->
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t
)
ident(
  ext_ref Core.Std.Set.inter
)
"cleanup.ml" 19 783 840 "cleanup.ml" 19 783 850
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t
)
ident(
  int_ref fixed_lits "cleanup.ml" 15 561 591 "cleanup.ml" 15 561 601
)
"cleanup.ml" 19 783 851 "cleanup.ml" 19 783 857
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t
)
ident(
  int_ref clause "cleanup.ml" 19 783 808 "cleanup.ml" 19 783 814
)
"cleanup.ml" 19 783 830 "cleanup.ml" 19 783 857
call(
  stack
)
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t
)
"cleanup.ml" 19 783 818 "cleanup.ml" 19 783 858
call(
  stack
)
type(
  int
)
"cleanup.ml" 19 783 859 "cleanup.ml" 19 783 860
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"cleanup.ml" 19 783 861 "cleanup.ml" 19 783 862
type(
  int
)
"cleanup.ml" 19 783 818 "cleanup.ml" 19 783 862
type(
  bool
)
"cleanup.ml" 19 783 808 "cleanup.ml" 19 783 863
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t -> bool
)
"cleanup.ml" 20 867 873 "cleanup.ml" 20 867 890
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list
)
ident(
  def remaining_clauses "cleanup.ml" 21 938 940 "cleanup.ml" 25 1230 1258
)
"cleanup.ml" 20 867 893 "cleanup.ml" 20 867 904
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list ->
  f:((Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t -> bool) ->
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list
)
ident(
  ext_ref Core.Std.List.filter
)
"cleanup.ml" 20 867 908 "cleanup.ml" 20 867 926
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t -> bool
)
ident(
  int_ref clause_unsatisfied "cleanup.ml" 19 783 789 "cleanup.ml" 19 783 807
)
"cleanup.ml" 20 867 927 "cleanup.ml" 20 867 934
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list
)
ident(
  int_ref old_cnf "cleanup.ml" 15 561 602 "cleanup.ml" 15 561 609
)
"cleanup.ml" 20 867 893 "cleanup.ml" 20 867 934
call(
  stack
)
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list
)
"cleanup.ml" 21 938 944 "cleanup.ml" 21 938 962
type(
  Cnf.Literal.Set.t
)
ident(
  def rejected_variables "cleanup.ml" 22 1045 1047 "cleanup.ml" 25 1230 1258
)
"cleanup.ml" 21 938 965 "cleanup.ml" 21 938 988
type(
  Cnf.Literal.t list -> Cnf.Literal.Set.t
)
ident(
  ext_ref Types.Cnf.Literal.Set.of_list
)
"cleanup.ml" 21 938 990 "cleanup.ml" 21 938 998
type(
  Cnf.Literal.t list ->
  f:(Cnf.Literal.t -> Cnf.Literal.t) -> Cnf.Literal.t list
)
ident(
  ext_ref Core.Std.List.map
)
"cleanup.ml" 21 938 1002 "cleanup.ml" 21 938 1014
type(
  Cnf.Literal.t -> Cnf.Literal.t
)
ident(
  int_ref reverse_term "cleanup.ml" 6 57 61 "cleanup.ml" 6 57 73
)
"cleanup.ml" 21 938 1016 "cleanup.ml" 21 938 1028
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t -> Cnf.Literal.t list
)
ident(
  ext_ref Core.Std.Set.elements
)
"cleanup.ml" 21 938 1029 "cleanup.ml" 21 938 1039
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t
)
ident(
  int_ref fixed_lits "cleanup.ml" 15 561 591 "cleanup.ml" 15 561 601
)
"cleanup.ml" 21 938 1016 "cleanup.ml" 21 938 1039
call(
  stack
)
type(
  Cnf.Literal.t list
)
"cleanup.ml" 21 938 990 "cleanup.ml" 21 938 1040
call(
  stack
)
type(
  Cnf.Literal.t list
)
"cleanup.ml" 21 938 965 "cleanup.ml" 21 938 1041
call(
  stack
)
type(
  Cnf.Literal.Set.t
)
"cleanup.ml" 22 1045 1051 "cleanup.ml" 22 1045 1058
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list
)
ident(
  def new_cnf "cleanup.ml" 23 1136 1138 "cleanup.ml" 25 1230 1258
)
"cleanup.ml" 22 1045 1061 "cleanup.ml" 22 1045 1069
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list ->
  f:((Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t ->
     (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t) ->
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list
)
ident(
  ext_ref Core.Std.List.map
)
"cleanup.ml" 22 1045 1078 "cleanup.ml" 22 1045 1079
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t
)
ident(
  def s "cleanup.ml" 22 1045 1083 "cleanup.ml" 22 1045 1112
)
"cleanup.ml" 22 1045 1083 "cleanup.ml" 22 1045 1091
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t ->
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t ->
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t
)
ident(
  ext_ref Core.Std.Set.diff
)
"cleanup.ml" 22 1045 1092 "cleanup.ml" 22 1045 1093
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t
)
ident(
  int_ref s "cleanup.ml" 22 1045 1078 "cleanup.ml" 22 1045 1079
)
"cleanup.ml" 22 1045 1094 "cleanup.ml" 22 1045 1112
type(
  Cnf.Literal.Set.t
)
ident(
  int_ref rejected_variables "cleanup.ml" 21 938 944 "cleanup.ml" 21 938 962
)
"cleanup.ml" 22 1045 1083 "cleanup.ml" 22 1045 1112
call(
  tail
)
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t
)
"cleanup.ml" 22 1045 1078 "cleanup.ml" 22 1045 1112
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t ->
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t
)
"cleanup.ml" 22 1045 1114 "cleanup.ml" 22 1045 1131
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list
)
ident(
  int_ref remaining_clauses "cleanup.ml" 20 867 873 "cleanup.ml" 20 867 890
)
"cleanup.ml" 22 1045 1061 "cleanup.ml" 22 1045 1131
call(
  stack
)
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list
)
"cleanup.ml" 23 1136 1142 "cleanup.ml" 23 1136 1153
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list ->
  f:((Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t -> bool) -> bool
)
ident(
  ext_ref Core.Std.List.exists
)
"cleanup.ml" 23 1136 1154 "cleanup.ml" 23 1136 1161
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list
)
ident(
  int_ref new_cnf "cleanup.ml" 22 1045 1051 "cleanup.ml" 22 1045 1058
)
"cleanup.ml" 23 1136 1170 "cleanup.ml" 23 1136 1171
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t
)
ident(
  def s "cleanup.ml" 23 1136 1175 "cleanup.ml" 23 1136 1191
)
"cleanup.ml" 23 1136 1175 "cleanup.ml" 23 1136 1185
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t -> int
)
ident(
  ext_ref Core.Std.Set.length
)
"cleanup.ml" 23 1136 1186 "cleanup.ml" 23 1136 1187
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t
)
ident(
  int_ref s "cleanup.ml" 23 1136 1170 "cleanup.ml" 23 1136 1171
)
"cleanup.ml" 23 1136 1175 "cleanup.ml" 23 1136 1187
call(
  stack
)
type(
  int
)
"cleanup.ml" 23 1136 1188 "cleanup.ml" 23 1136 1189
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"cleanup.ml" 23 1136 1190 "cleanup.ml" 23 1136 1191
type(
  int
)
"cleanup.ml" 23 1136 1175 "cleanup.ml" 23 1136 1191
type(
  bool
)
"cleanup.ml" 23 1136 1170 "cleanup.ml" 23 1136 1191
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t -> bool
)
"cleanup.ml" 23 1136 1142 "cleanup.ml" 23 1136 1192
call(
  stack
)
type(
  bool
)
"cleanup.ml" 24 1199 1203 "cleanup.ml" 24 1199 1208
type(
  exn ->
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list *
  bool String.Map.t
)
ident(
  ext_ref Pervasives.raise
)
"cleanup.ml" 24 1199 1221 "cleanup.ml" 24 1199 1228
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list
)
ident(
  int_ref old_cnf "cleanup.ml" 15 561 602 "cleanup.ml" 15 561 609
)
"cleanup.ml" 24 1199 1210 "cleanup.ml" 24 1199 1228
type(
  exn
)
"cleanup.ml" 24 1199 1203 "cleanup.ml" 24 1199 1229
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list *
  bool String.Map.t
)
"cleanup.ml" 25 1230 1238 "cleanup.ml" 25 1230 1245
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list
)
ident(
  int_ref new_cnf "cleanup.ml" 22 1045 1051 "cleanup.ml" 22 1045 1058
)
"cleanup.ml" 25 1230 1247 "cleanup.ml" 25 1230 1257
type(
  bool String.Map.t
)
ident(
  int_ref assignment "cleanup.ml" 16 612 618 "cleanup.ml" 16 612 628
)
"cleanup.ml" 25 1230 1238 "cleanup.ml" 25 1230 1257
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list *
  bool String.Map.t
)
"cleanup.ml" 23 1136 1138 "cleanup.ml" 25 1230 1258
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list *
  bool String.Map.t
)
"cleanup.ml" 22 1045 1047 "cleanup.ml" 25 1230 1258
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list *
  bool String.Map.t
)
"cleanup.ml" 21 938 940 "cleanup.ml" 25 1230 1258
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list *
  bool String.Map.t
)
"cleanup.ml" 20 867 869 "cleanup.ml" 25 1230 1258
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list *
  bool String.Map.t
)
"cleanup.ml" 19 783 785 "cleanup.ml" 25 1230 1258
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list *
  bool String.Map.t
)
"cleanup.ml" 16 612 614 "cleanup.ml" 25 1230 1258
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list *
  bool String.Map.t
)
"cleanup.ml" 15 561 602 "cleanup.ml" 25 1230 1258
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list ->
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list *
  bool String.Map.t
)
"cleanup.ml" 15 561 591 "cleanup.ml" 25 1230 1258
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t ->
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list ->
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list *
  bool String.Map.t
)
"cleanup.ml" 27 1260 1264 "cleanup.ml" 27 1260 1287
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list ->
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list *
  bool String.Map.t
)
ident(
  def unit_clause_elimination "cleanup.ml" 35 1701 1701 "cleanup.ml" 1 0 -1
)
"cleanup.ml" 27 1260 1288 "cleanup.ml" 27 1260 1291
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list
)
ident(
  def cnf "cleanup.ml" 28 1294 1296 "cleanup.ml" 33 1652 1698
)
"cleanup.ml" 28 1294 1300 "cleanup.ml" 28 1294 1312
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list
)
ident(
  def unit_clauses "cleanup.ml" 29 1371 1373 "cleanup.ml" 33 1652 1698
)
"cleanup.ml" 28 1294 1315 "cleanup.ml" 28 1294 1326
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list ->
  f:((Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t -> bool) ->
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list
)
ident(
  ext_ref Core.Std.List.filter
)
"cleanup.ml" 28 1294 1327 "cleanup.ml" 28 1294 1330
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list
)
ident(
  int_ref cnf "cleanup.ml" 27 1260 1288 "cleanup.ml" 27 1260 1291
)
"cleanup.ml" 28 1294 1339 "cleanup.ml" 28 1294 1342
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t
)
ident(
  def set "cleanup.ml" 28 1294 1346 "cleanup.ml" 28 1294 1366
)
"cleanup.ml" 28 1294 1347 "cleanup.ml" 28 1294 1357
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t -> int
)
ident(
  ext_ref Core.Std.Set.length
)
"cleanup.ml" 28 1294 1358 "cleanup.ml" 28 1294 1361
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t
)
ident(
  int_ref set "cleanup.ml" 28 1294 1339 "cleanup.ml" 28 1294 1342
)
"cleanup.ml" 28 1294 1347 "cleanup.ml" 28 1294 1361
call(
  stack
)
type(
  int
)
"cleanup.ml" 28 1294 1363 "cleanup.ml" 28 1294 1364
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"cleanup.ml" 28 1294 1365 "cleanup.ml" 28 1294 1366
type(
  int
)
"cleanup.ml" 28 1294 1346 "cleanup.ml" 28 1294 1366
type(
  bool
)
"cleanup.ml" 28 1294 1339 "cleanup.ml" 28 1294 1366
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t -> bool
)
"cleanup.ml" 28 1294 1315 "cleanup.ml" 28 1294 1367
call(
  stack
)
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list
)
"cleanup.ml" 29 1371 1377 "cleanup.ml" 29 1371 1386
type(
  Cnf.Literal.Set.t
)
ident(
  def unit_vars "cleanup.ml" 30 1465 1467 "cleanup.ml" 33 1652 1698
)
"cleanup.ml" 29 1371 1389 "cleanup.ml" 29 1371 1403
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list ->
  init:Cnf.Literal.Set.t ->
  f:(Cnf.Literal.Set.t ->
     (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t ->
     Cnf.Literal.Set.t) ->
  Cnf.Literal.Set.t
)
ident(
  ext_ref Core.Std.List.fold_left
)
"cleanup.ml" 29 1371 1404 "cleanup.ml" 29 1371 1416
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list
)
ident(
  int_ref unit_clauses "cleanup.ml" 28 1294 1300 "cleanup.ml" 28 1294 1312
)
"cleanup.ml" 29 1371 1424 "cleanup.ml" 29 1371 1445
type(
  Cnf.Literal.Set.t
)
ident(
  ext_ref Types.Cnf.Literal.Set.empty
)
"cleanup.ml" 29 1371 1451 "cleanup.ml" 29 1371 1460
type(
  Cnf.Literal.Set.t ->
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t -> Cnf.Literal.Set.t
)
ident(
  ext_ref Core.Std.Set.union
)
"cleanup.ml" 29 1371 1389 "cleanup.ml" 29 1371 1461
call(
  stack
)
type(
  Cnf.Literal.Set.t
)
"cleanup.ml" 30 1465 1471 "cleanup.ml" 30 1465 1484
type(
  Cnf.Literal.t -> bool
)
ident(
  def is_unsolvable "cleanup.ml" 31 1531 1533 "cleanup.ml" 33 1652 1698
)
"cleanup.ml" 30 1465 1485 "cleanup.ml" 30 1465 1488
type(
  Cnf.Literal.t
)
ident(
  def var "cleanup.ml" 30 1465 1491 "cleanup.ml" 30 1465 1527
)
"cleanup.ml" 30 1465 1491 "cleanup.ml" 30 1465 1498
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t ->
  Cnf.Literal.t -> bool
)
ident(
  ext_ref Core.Std.Set.mem
)
"cleanup.ml" 30 1465 1499 "cleanup.ml" 30 1465 1508
type(
  Cnf.Literal.Set.t
)
ident(
  int_ref unit_vars "cleanup.ml" 29 1371 1377 "cleanup.ml" 29 1371 1386
)
"cleanup.ml" 30 1465 1510 "cleanup.ml" 30 1465 1522
type(
  Cnf.Literal.t -> Cnf.Literal.t
)
ident(
  int_ref reverse_term "cleanup.ml" 6 57 61 "cleanup.ml" 6 57 73
)
"cleanup.ml" 30 1465 1523 "cleanup.ml" 30 1465 1526
type(
  Cnf.Literal.t
)
ident(
  int_ref var "cleanup.ml" 30 1465 1485 "cleanup.ml" 30 1465 1488
)
"cleanup.ml" 30 1465 1510 "cleanup.ml" 30 1465 1526
call(
  stack
)
type(
  Cnf.Literal.t
)
"cleanup.ml" 30 1465 1491 "cleanup.ml" 30 1465 1527
call(
  tail
)
type(
  bool
)
"cleanup.ml" 30 1465 1485 "cleanup.ml" 30 1465 1527
type(
  Cnf.Literal.t -> bool
)
"cleanup.ml" 31 1531 1537 "cleanup.ml" 31 1531 1551
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t ->
  init:bool -> f:(Cnf.Literal.t -> bool -> bool) -> bool
)
ident(
  ext_ref Core.Std.Set.fold_right
)
"cleanup.ml" 31 1531 1552 "cleanup.ml" 31 1531 1561
type(
  Cnf.Literal.Set.t
)
ident(
  int_ref unit_vars "cleanup.ml" 29 1371 1377 "cleanup.ml" 29 1371 1386
)
"cleanup.ml" 31 1531 1568 "cleanup.ml" 31 1531 1573
type(
  bool
)
"cleanup.ml" 31 1531 1582 "cleanup.ml" 31 1531 1585
type(
  Cnf.Literal.t
)
ident(
  def var "cleanup.ml" 31 1531 1586 "cleanup.ml" 31 1531 1619
)
"cleanup.ml" 31 1531 1586 "cleanup.ml" 31 1531 1589
type(
  bool
)
ident(
  def old "cleanup.ml" 31 1531 1593 "cleanup.ml" 31 1531 1619
)
"cleanup.ml" 31 1531 1593 "cleanup.ml" 31 1531 1596
type(
  bool
)
ident(
  int_ref old "cleanup.ml" 31 1531 1586 "cleanup.ml" 31 1531 1589
)
"cleanup.ml" 31 1531 1597 "cleanup.ml" 31 1531 1599
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( || )
)
"cleanup.ml" 31 1531 1601 "cleanup.ml" 31 1531 1614
type(
  Cnf.Literal.t -> bool
)
ident(
  int_ref is_unsolvable "cleanup.ml" 30 1465 1471 "cleanup.ml" 30 1465 1484
)
"cleanup.ml" 31 1531 1615 "cleanup.ml" 31 1531 1618
type(
  Cnf.Literal.t
)
ident(
  int_ref var "cleanup.ml" 31 1531 1582 "cleanup.ml" 31 1531 1585
)
"cleanup.ml" 31 1531 1601 "cleanup.ml" 31 1531 1618
call(
  tail
)
type(
  bool
)
"cleanup.ml" 31 1531 1593 "cleanup.ml" 31 1531 1619
type(
  bool
)
"cleanup.ml" 31 1531 1586 "cleanup.ml" 31 1531 1619
type(
  bool -> bool
)
"cleanup.ml" 31 1531 1582 "cleanup.ml" 31 1531 1619
type(
  Cnf.Literal.t -> bool -> bool
)
"cleanup.ml" 31 1531 1537 "cleanup.ml" 31 1531 1620
call(
  stack
)
type(
  bool
)
"cleanup.ml" 32 1622 1629 "cleanup.ml" 32 1622 1634
type(
  exn ->
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list *
  bool String.Map.t
)
ident(
  ext_ref Pervasives.raise
)
"cleanup.ml" 32 1622 1647 "cleanup.ml" 32 1622 1650
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list
)
ident(
  int_ref cnf "cleanup.ml" 27 1260 1288 "cleanup.ml" 27 1260 1291
)
"cleanup.ml" 32 1622 1636 "cleanup.ml" 32 1622 1650
type(
  exn
)
"cleanup.ml" 32 1622 1629 "cleanup.ml" 32 1622 1651
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list *
  bool String.Map.t
)
"cleanup.ml" 33 1652 1659 "cleanup.ml" 33 1652 1684
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t ->
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list ->
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list *
  bool String.Map.t
)
ident(
  int_ref fixed_literals_to_new_cnf "cleanup.ml" 15 561 565 "cleanup.ml" 15 561 590
)
"cleanup.ml" 33 1652 1685 "cleanup.ml" 33 1652 1694
type(
  Cnf.Literal.Set.t
)
ident(
  int_ref unit_vars "cleanup.ml" 29 1371 1377 "cleanup.ml" 29 1371 1386
)
"cleanup.ml" 33 1652 1695 "cleanup.ml" 33 1652 1698
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list
)
ident(
  int_ref cnf "cleanup.ml" 27 1260 1288 "cleanup.ml" 27 1260 1291
)
"cleanup.ml" 33 1652 1659 "cleanup.ml" 33 1652 1698
call(
  tail
)
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list *
  bool String.Map.t
)
"cleanup.ml" 31 1531 1533 "cleanup.ml" 33 1652 1698
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list *
  bool String.Map.t
)
"cleanup.ml" 30 1465 1467 "cleanup.ml" 33 1652 1698
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list *
  bool String.Map.t
)
"cleanup.ml" 29 1371 1373 "cleanup.ml" 33 1652 1698
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list *
  bool String.Map.t
)
"cleanup.ml" 28 1294 1296 "cleanup.ml" 33 1652 1698
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list *
  bool String.Map.t
)
"cleanup.ml" 27 1260 1288 "cleanup.ml" 33 1652 1698
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list ->
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list *
  bool String.Map.t
)
"cleanup.ml" 35 1701 1705 "cleanup.ml" 35 1701 1729
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list ->
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list *
  bool String.Map.t
)
ident(
  def pure_literal_elimination "cleanup.ml" 41 2107 2107 "cleanup.ml" 1 0 -1
)
"cleanup.ml" 35 1701 1730 "cleanup.ml" 35 1701 1733
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list
)
ident(
  def cnf "cleanup.ml" 36 1736 1738 "cleanup.ml" 38 1935 1980
)
"cleanup.ml" 36 1736 1742 "cleanup.ml" 36 1736 1754
type(
  Cnf.Literal.Set.t
)
ident(
  def all_literals "cleanup.ml" 37 1824 1826 "cleanup.ml" 38 1935 1980
)
"cleanup.ml" 36 1736 1757 "cleanup.ml" 36 1736 1771
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list ->
  init:Cnf.Literal.Set.t ->
  f:(Cnf.Literal.Set.t ->
     (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t ->
     Cnf.Literal.Set.t) ->
  Cnf.Literal.Set.t
)
ident(
  ext_ref Core.Std.List.fold_left
)
"cleanup.ml" 36 1736 1772 "cleanup.ml" 36 1736 1775
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list
)
ident(
  int_ref cnf "cleanup.ml" 35 1701 1730 "cleanup.ml" 35 1701 1733
)
"cleanup.ml" 36 1736 1783 "cleanup.ml" 36 1736 1804
type(
  Cnf.Literal.Set.t
)
ident(
  ext_ref Types.Cnf.Literal.Set.empty
)
"cleanup.ml" 36 1736 1810 "cleanup.ml" 36 1736 1819
type(
  Cnf.Literal.Set.t ->
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t -> Cnf.Literal.Set.t
)
ident(
  ext_ref Core.Std.Set.union
)
"cleanup.ml" 36 1736 1757 "cleanup.ml" 36 1736 1820
call(
  stack
)
type(
  Cnf.Literal.Set.t
)
"cleanup.ml" 37 1824 1830 "cleanup.ml" 37 1824 1843
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t
)
ident(
  def pure_literals "cleanup.ml" 38 1935 1937 "cleanup.ml" 38 1935 1980
)
"cleanup.ml" 37 1824 1846 "cleanup.ml" 37 1824 1856
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t ->
  f:(Cnf.Literal.t -> bool) ->
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t
)
ident(
  ext_ref Core.Std.Set.filter
)
"cleanup.ml" 37 1824 1857 "cleanup.ml" 37 1824 1869
type(
  Cnf.Literal.Set.t
)
ident(
  int_ref all_literals "cleanup.ml" 36 1736 1742 "cleanup.ml" 36 1736 1754
)
"cleanup.ml" 37 1824 1878 "cleanup.ml" 37 1824 1881
type(
  Cnf.Literal.t
)
ident(
  def var "cleanup.ml" 37 1824 1885 "cleanup.ml" 37 1824 1930
)
"cleanup.ml" 37 1824 1885 "cleanup.ml" 37 1824 1888
type(
  bool -> bool
)
ident(
  ext_ref Pervasives.not
)
"cleanup.ml" 37 1824 1890 "cleanup.ml" 37 1824 1897
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t ->
  Cnf.Literal.t -> bool
)
ident(
  ext_ref Core.Std.Set.mem
)
"cleanup.ml" 37 1824 1898 "cleanup.ml" 37 1824 1910
type(
  Cnf.Literal.Set.t
)
ident(
  int_ref all_literals "cleanup.ml" 36 1736 1742 "cleanup.ml" 36 1736 1754
)
"cleanup.ml" 37 1824 1912 "cleanup.ml" 37 1824 1924
type(
  Cnf.Literal.t -> Cnf.Literal.t
)
ident(
  int_ref reverse_term "cleanup.ml" 6 57 61 "cleanup.ml" 6 57 73
)
"cleanup.ml" 37 1824 1925 "cleanup.ml" 37 1824 1928
type(
  Cnf.Literal.t
)
ident(
  int_ref var "cleanup.ml" 37 1824 1878 "cleanup.ml" 37 1824 1881
)
"cleanup.ml" 37 1824 1912 "cleanup.ml" 37 1824 1928
call(
  stack
)
type(
  Cnf.Literal.t
)
"cleanup.ml" 37 1824 1890 "cleanup.ml" 37 1824 1929
call(
  stack
)
type(
  bool
)
"cleanup.ml" 37 1824 1885 "cleanup.ml" 37 1824 1930
type(
  bool
)
"cleanup.ml" 37 1824 1878 "cleanup.ml" 37 1824 1930
type(
  Cnf.Literal.t -> bool
)
"cleanup.ml" 37 1824 1846 "cleanup.ml" 37 1824 1931
call(
  stack
)
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t
)
"cleanup.ml" 38 1935 1937 "cleanup.ml" 38 1935 1962
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t ->
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list ->
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list *
  bool String.Map.t
)
ident(
  int_ref fixed_literals_to_new_cnf "cleanup.ml" 15 561 565 "cleanup.ml" 15 561 590
)
"cleanup.ml" 38 1935 1963 "cleanup.ml" 38 1935 1976
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t
)
ident(
  int_ref pure_literals "cleanup.ml" 37 1824 1830 "cleanup.ml" 37 1824 1843
)
"cleanup.ml" 38 1935 1977 "cleanup.ml" 38 1935 1980
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list
)
ident(
  int_ref cnf "cleanup.ml" 35 1701 1730 "cleanup.ml" 35 1701 1733
)
"cleanup.ml" 38 1935 1937 "cleanup.ml" 38 1935 1980
call(
  tail
)
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list *
  bool String.Map.t
)
"cleanup.ml" 37 1824 1826 "cleanup.ml" 38 1935 1980
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list *
  bool String.Map.t
)
"cleanup.ml" 36 1736 1738 "cleanup.ml" 38 1935 1980
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list *
  bool String.Map.t
)
"cleanup.ml" 35 1701 1730 "cleanup.ml" 38 1935 1980
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list ->
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list *
  bool String.Map.t
)
"cleanup.ml" 41 2107 2115 "cleanup.ml" 41 2107 2126
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list ->
  (string, bool, String.comparator_witness) Map.t *
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list
)
ident(
  def cleanup_cnf "cleanup.ml" 41 2107 2107 "cleanup.ml" 1 0 -1
)
"cleanup.ml" 41 2107 2127 "cleanup.ml" 41 2107 2130
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list
)
ident(
  def cnf "cleanup.ml" 42 2133 2135 "cleanup.ml" 57 2611 2635
)
"cleanup.ml" 42 2133 2139 "cleanup.ml" 42 2133 2140
type(
  key:'a -> [< `Both of 'b | `Left of 'c | `Right of 'c ] -> 'c option
)
ident(
  def f "cleanup.ml" 48 2265 2267 "cleanup.ml" 57 2611 2635
)
"cleanup.ml" 42 2133 2146 "cleanup.ml" 42 2133 2147
type(
  [< `Both of 'b | `Left of 'c | `Right of 'c ] as 'd
)
ident(
  def v "cleanup.ml" 43 2151 2155 "cleanup.ml" 46 2235 2259
)
"cleanup.ml" 43 2151 2161 "cleanup.ml" 43 2151 2162
type(
  'd
)
ident(
  int_ref v "cleanup.ml" 42 2133 2146 "cleanup.ml" 42 2133 2147
)
"cleanup.ml" 44 2168 2180 "cleanup.ml" 44 2168 2181
type(
  'b
)
"cleanup.ml" 44 2168 2174 "cleanup.ml" 44 2168 2181
type(
  'd
)
"cleanup.ml" 44 2168 2185 "cleanup.ml" 44 2168 2193
type(
  string -> 'c option
)
ident(
  ext_ref Pervasives.failwith
)
"cleanup.ml" 44 2168 2194 "cleanup.ml" 44 2168 2210
type(
  string
)
"cleanup.ml" 44 2168 2185 "cleanup.ml" 44 2168 2210
call(
  tail
)
type(
  'c option
)
"cleanup.ml" 45 2211 2223 "cleanup.ml" 45 2211 2224
type(
  'c
)
ident(
  def x "cleanup.ml" 45 2211 2228 "cleanup.ml" 45 2211 2234
)
"cleanup.ml" 45 2211 2217 "cleanup.ml" 45 2211 2224
type(
  'd
)
"cleanup.ml" 45 2211 2233 "cleanup.ml" 45 2211 2234
type(
  'c
)
ident(
  int_ref x "cleanup.ml" 45 2211 2223 "cleanup.ml" 45 2211 2224
)
"cleanup.ml" 45 2211 2228 "cleanup.ml" 45 2211 2234
type(
  'c option
)
"cleanup.ml" 46 2235 2248 "cleanup.ml" 46 2235 2249
type(
  'c
)
ident(
  def x "cleanup.ml" 46 2235 2253 "cleanup.ml" 46 2235 2259
)
"cleanup.ml" 46 2235 2241 "cleanup.ml" 46 2235 2249
type(
  'd
)
"cleanup.ml" 46 2235 2258 "cleanup.ml" 46 2235 2259
type(
  'c
)
ident(
  int_ref x "cleanup.ml" 46 2235 2248 "cleanup.ml" 46 2235 2249
)
"cleanup.ml" 46 2235 2253 "cleanup.ml" 46 2235 2259
type(
  'c option
)
"cleanup.ml" 43 2151 2155 "cleanup.ml" 46 2235 2259
type(
  'c option
)
"cleanup.ml" 42 2133 2146 "cleanup.ml" 46 2235 2259
type(
  'd -> 'c option
)
"cleanup.ml" 42 2133 2141 "cleanup.ml" 46 2235 2259
type(
  key:'a -> 'd -> 'c option
)
type(
  'a
)
ident(
  def key "cleanup.ml" 42 2133 2146 "cleanup.ml" 46 2235 2259
)
"cleanup.ml" 48 2265 2272 "cleanup.ml" 48 2265 2276
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list
)
ident(
  def cnf1 "cleanup.ml" 49 2324 2326 "cleanup.ml" 57 2611 2635
)
"cleanup.ml" 48 2265 2278 "cleanup.ml" 48 2265 2289
type(
  bool String.Map.t
)
ident(
  def assignment1 "cleanup.ml" 49 2324 2326 "cleanup.ml" 57 2611 2635
)
"cleanup.ml" 48 2265 2272 "cleanup.ml" 48 2265 2289
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list *
  bool String.Map.t
)
"cleanup.ml" 48 2265 2293 "cleanup.ml" 48 2265 2316
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list ->
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list *
  bool String.Map.t
)
ident(
  int_ref unit_clause_elimination "cleanup.ml" 27 1260 1264 "cleanup.ml" 27 1260 1287
)
"cleanup.ml" 48 2265 2317 "cleanup.ml" 48 2265 2320
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list
)
ident(
  int_ref cnf "cleanup.ml" 41 2107 2127 "cleanup.ml" 41 2107 2130
)
"cleanup.ml" 48 2265 2293 "cleanup.ml" 48 2265 2320
call(
  stack
)
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list *
  bool String.Map.t
)
"cleanup.ml" 49 2324 2331 "cleanup.ml" 49 2324 2335
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list
)
ident(
  def cnf2 "cleanup.ml" 50 2385 2387 "cleanup.ml" 57 2611 2635
)
"cleanup.ml" 49 2324 2337 "cleanup.ml" 49 2324 2348
type(
  bool String.Map.t
)
ident(
  def assignment2 "cleanup.ml" 50 2385 2387 "cleanup.ml" 57 2611 2635
)
"cleanup.ml" 49 2324 2331 "cleanup.ml" 49 2324 2348
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list *
  bool String.Map.t
)
"cleanup.ml" 49 2324 2352 "cleanup.ml" 49 2324 2376
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list ->
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list *
  bool String.Map.t
)
ident(
  int_ref pure_literal_elimination "cleanup.ml" 35 1701 1705 "cleanup.ml" 35 1701 1729
)
"cleanup.ml" 49 2324 2377 "cleanup.ml" 49 2324 2381
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list
)
ident(
  int_ref cnf1 "cleanup.ml" 48 2265 2272 "cleanup.ml" 48 2265 2276
)
"cleanup.ml" 49 2324 2352 "cleanup.ml" 49 2324 2381
call(
  stack
)
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list *
  bool String.Map.t
)
"cleanup.ml" 50 2385 2391 "cleanup.ml" 50 2385 2401
type(
  (string, bool, String.comparator_witness) Map.t
)
ident(
  def assignment "cleanup.ml" 53 2451 2453 "cleanup.ml" 57 2611 2635
)
"cleanup.ml" 51 2405 2409 "cleanup.ml" 51 2405 2418
type(
  (string, bool, String.comparator_witness) Map.t ->
  (string, bool, String.comparator_witness) Map.t ->
  f:(key:string ->
     [ `Both of bool * bool | `Left of bool | `Right of bool ] -> bool option) ->
  (string, bool, String.comparator_witness) Map.t
)
ident(
  ext_ref Core.Std.Map.merge
)
"cleanup.ml" 51 2405 2419 "cleanup.ml" 51 2405 2430
type(
  bool String.Map.t
)
ident(
  int_ref assignment1 "cleanup.ml" 48 2265 2278 "cleanup.ml" 48 2265 2289
)
"cleanup.ml" 51 2405 2431 "cleanup.ml" 51 2405 2442
type(
  bool String.Map.t
)
ident(
  int_ref assignment2 "cleanup.ml" 49 2324 2337 "cleanup.ml" 49 2324 2348
)
"cleanup.ml" 51 2405 2443 "cleanup.ml" 51 2405 2445
type(
  key:string ->
  [ `Both of bool * bool | `Left of bool | `Right of bool ] -> bool option
)
ident(
  int_ref f "cleanup.ml" 42 2133 2139 "cleanup.ml" 42 2133 2140
)
"cleanup.ml" 51 2405 2409 "cleanup.ml" 51 2405 2445
call(
  stack
)
type(
  (string, bool, String.comparator_witness) Map.t
)
"cleanup.ml" 53 2451 2457 "cleanup.ml" 53 2451 2467
type(
  (string, bool, String.comparator_witness) Map.t -> int
)
ident(
  ext_ref Core.Std.Map.length
)
"cleanup.ml" 53 2451 2468 "cleanup.ml" 53 2451 2478
type(
  (string, bool, String.comparator_witness) Map.t
)
ident(
  int_ref assignment "cleanup.ml" 50 2385 2391 "cleanup.ml" 50 2385 2401
)
"cleanup.ml" 53 2451 2457 "cleanup.ml" 53 2451 2478
call(
  stack
)
type(
  int
)
"cleanup.ml" 53 2451 2479 "cleanup.ml" 53 2451 2480
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( > )
)
"cleanup.ml" 53 2451 2481 "cleanup.ml" 53 2451 2482
type(
  int
)
"cleanup.ml" 53 2451 2457 "cleanup.ml" 53 2451 2482
type(
  bool
)
"cleanup.ml" 55 2492 2501 "cleanup.ml" 55 2492 2517
type(
  (string, bool, String.comparator_witness) Map.t
)
ident(
  def child_assignment "cleanup.ml" 56 2553 2558 "cleanup.ml" 56 2553 2609
)
"cleanup.ml" 55 2492 2519 "cleanup.ml" 55 2492 2528
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list
)
ident(
  def final_cnf "cleanup.ml" 56 2553 2558 "cleanup.ml" 56 2553 2609
)
"cleanup.ml" 55 2492 2501 "cleanup.ml" 55 2492 2528
type(
  (string, bool, String.comparator_witness) Map.t *
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list
)
"cleanup.ml" 55 2492 2532 "cleanup.ml" 55 2492 2543
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list ->
  (string, bool, String.comparator_witness) Map.t *
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list
)
ident(
  int_ref cleanup_cnf "cleanup.ml" 41 2107 2115 "cleanup.ml" 41 2107 2126
)
"cleanup.ml" 55 2492 2544 "cleanup.ml" 55 2492 2548
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list
)
ident(
  int_ref cnf2 "cleanup.ml" 49 2324 2331 "cleanup.ml" 49 2324 2335
)
"cleanup.ml" 55 2492 2532 "cleanup.ml" 55 2492 2548
call(
  stack
)
type(
  (string, bool, String.comparator_witness) Map.t *
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list
)
"cleanup.ml" 56 2553 2558 "cleanup.ml" 56 2553 2567
type(
  (string, bool, String.comparator_witness) Map.t ->
  (string, bool, String.comparator_witness) Map.t ->
  f:(key:string ->
     [ `Both of bool * bool | `Left of bool | `Right of bool ] -> bool option) ->
  (string, bool, String.comparator_witness) Map.t
)
ident(
  ext_ref Core.Std.Map.merge
)
"cleanup.ml" 56 2553 2568 "cleanup.ml" 56 2553 2578
type(
  (string, bool, String.comparator_witness) Map.t
)
ident(
  int_ref assignment "cleanup.ml" 50 2385 2391 "cleanup.ml" 50 2385 2401
)
"cleanup.ml" 56 2553 2579 "cleanup.ml" 56 2553 2595
type(
  (string, bool, String.comparator_witness) Map.t
)
ident(
  int_ref child_assignment "cleanup.ml" 55 2492 2501 "cleanup.ml" 55 2492 2517
)
"cleanup.ml" 56 2553 2596 "cleanup.ml" 56 2553 2598
type(
  key:string ->
  [ `Both of bool * bool | `Left of bool | `Right of bool ] -> bool option
)
ident(
  int_ref f "cleanup.ml" 42 2133 2139 "cleanup.ml" 42 2133 2140
)
"cleanup.ml" 56 2553 2558 "cleanup.ml" 56 2553 2598
call(
  stack
)
type(
  (string, bool, String.comparator_witness) Map.t
)
"cleanup.ml" 56 2553 2600 "cleanup.ml" 56 2553 2609
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list
)
ident(
  int_ref final_cnf "cleanup.ml" 55 2492 2519 "cleanup.ml" 55 2492 2528
)
"cleanup.ml" 56 2553 2558 "cleanup.ml" 56 2553 2609
type(
  (string, bool, String.comparator_witness) Map.t *
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list
)
"cleanup.ml" 55 2492 2496 "cleanup.ml" 56 2553 2610
type(
  (string, bool, String.comparator_witness) Map.t *
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list
)
"cleanup.ml" 57 2611 2619 "cleanup.ml" 57 2611 2629
type(
  (string, bool, String.comparator_witness) Map.t
)
ident(
  int_ref assignment "cleanup.ml" 50 2385 2391 "cleanup.ml" 50 2385 2401
)
"cleanup.ml" 57 2611 2631 "cleanup.ml" 57 2611 2634
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list
)
ident(
  int_ref cnf "cleanup.ml" 41 2107 2127 "cleanup.ml" 41 2107 2130
)
"cleanup.ml" 57 2611 2619 "cleanup.ml" 57 2611 2634
type(
  (string, bool, String.comparator_witness) Map.t *
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list
)
"cleanup.ml" 53 2451 2453 "cleanup.ml" 57 2611 2635
type(
  (string, bool, String.comparator_witness) Map.t *
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list
)
"cleanup.ml" 50 2385 2387 "cleanup.ml" 57 2611 2635
type(
  (string, bool, String.comparator_witness) Map.t *
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list
)
"cleanup.ml" 49 2324 2326 "cleanup.ml" 57 2611 2635
type(
  (string, bool, String.comparator_witness) Map.t *
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list
)
"cleanup.ml" 48 2265 2267 "cleanup.ml" 57 2611 2635
type(
  (string, bool, String.comparator_witness) Map.t *
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list
)
"cleanup.ml" 42 2133 2135 "cleanup.ml" 57 2611 2635
type(
  (string, bool, String.comparator_witness) Map.t *
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list
)
"cleanup.ml" 41 2107 2127 "cleanup.ml" 57 2611 2635
type(
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list ->
  (string, bool, String.comparator_witness) Map.t *
  (Cnf.Literal.t, Cnf.Literal.comparator_witness) Set.t list
)
